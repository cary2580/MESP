<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Str_Empty_AUFNR" xml:space="preserve">
    <value>查无此工单数据 !!</value>
  </data>
  <data name="Str_Empty_DeviceRow" xml:space="preserve">
    <value>机台编号不存在</value>
  </data>
  <data name="Str_Error_ARBPL" xml:space="preserve">
    <value>量产工单不许有「RD001」工作中心，请联系厂务人员修改</value>
  </data>
  <data name="Str_Error_BaseRoutingNoDeviceGroupID" xml:space="preserve">
    <value>尚有工序未设定群组设备编号，请联系厂务室设定。 &lt;br&gt; 途程群组 : {0}  计数器 : {1} &lt;br&gt;</value>
  </data>
  <data name="Str_Error_BaseRoutingNoRow" xml:space="preserve">
    <value>查无此工单途程作业或尚未设定好机台群组码 !! 请洽询厂务人员</value>
  </data>
  <data name="Str_Error_DeviceNotFirstProcess" xml:space="preserve">
    <value>此机台不被信任开立流程卡</value>
  </data>
  <data name="Str_Error_HaveProcessTypeIDEmpty" xml:space="preserve">
    <value>工种未维护完全，请联系厂务室设定。</value>
  </data>
  <data name="Str_Error_LastTicketBoxQty" xml:space="preserve">
    <value>最后一框数量格式错误</value>
  </data>
  <data name="Str_Error_LastTicketBoxQtyOverTicketBoxQty" xml:space="preserve">
    <value>最后一框数量大于单框数量</value>
  </data>
  <data name="Str_Error_MOStatus0" xml:space="preserve">
    <value>物料尚未过帐 !!</value>
  </data>
  <data name="Str_Error_MOStatus2" xml:space="preserve">
    <value>工单已关结 !!</value>
  </data>
  <data name="Str_Error_NotEndDate" xml:space="preserve">
    <value>工单已结束&lt;br&gt;结束日期 : {0}</value>
  </data>
  <data name="Str_Error_NotStartDate" xml:space="preserve">
    <value>工单尚未开始 &lt;br&gt; 开始日期 : {0}</value>
  </data>
  <data name="Str_Error_OperationUnActivity" xml:space="preserve">
    <value>作业不在活动中</value>
  </data>
  <data name="Str_Error_OverMOQty" xml:space="preserve">
    <value>流程卡张数乘单框数超过工单总数量，请重新确认</value>
  </data>
  <data name="Str_Error_ProcessNull" xml:space="preserve">
    <value>途程作业与工序编号匹配不上，请联系厂务人员</value>
  </data>
  <data name="Str_Error_TicketBox" xml:space="preserve">
    <value>流程卡张数格式错误</value>
  </data>
  <data name="Str_Error_TicketBoxQty" xml:space="preserve">
    <value>单框数量格式错误</value>
  </data>
  <data name="Str_Exist_AUFNR" xml:space="preserve">
    <value>此工单已建立过，请勿重复建立 !!</value>
  </data>
</root>